<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<context:component-scan base-package="com.atguigu">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 引入外部配置文件  -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	<!-- 2、配置操作数据库  -->
	<!--2.1）、数据源  -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="username" value="${druid.username}"></property>
		<property name="password" value="${druid.password}"></property>
		<property name="driverClassName" value="${druid.driver}"></property>
		<property name="url" value="${druid.url}"></property>
	</bean>
	<!--2.3）、配置事务控制 :(AOP)，事务管理器 -->	
	<!--2.3.1）、配置事务管理器（事务切面）：只需要控制住数据源即可  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--2.3.2）、基于注解版的事务配置 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.atguigu.crud.service..*(..))" id="txPoint"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="*"/>
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!--2.2）、配置使用mybatis操作数据库【sqlSession】  -->
	<!-- Spring自己本身的配置文件里面不用写*  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 指定sql映射文件在哪里 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 将所有的mapper扫描到容器中  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定dao接口所在的包名  -->
		<property name="basePackage" value="com.atguigu.crud.dao"></property>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<constructor-arg name="executorType" value="BATCH"/>
	</bean>
	
</beans>
